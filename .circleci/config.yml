---
version: 2.1

# To use this config, you have to add following variables in CircleCI config:
#   - DOCKER_USER
#   - DOCKER_PASSWORD
#   - DOCKER_ORG (optional, default is: prombench)

executors:
  # Whenever the Go version is updated here, .travis.yml and .promu.yml
  # should also be updated.
  golang:
    docker:
    - image: circleci/golang:1.13

commands:
  publish_image:
    parameters:
      registry:
        description: Registry address
        type: string
        default: "docker.io"
      organization:
        description: Registry organization
        type: string
        default: prombench
      image_name:
        description: Name of the container image
        type: string
      login:
        description: Environment variable holding the registry login
        type: env_var_name
        default: DOCKER_USER
      password:
        description: Environment variable holding the registry password
        type: env_var_name
        default: DOCKER_PASSWORD
      dockerfile_path:
        description: Path to Dockerfile
        type: string
        default: ""
      context_path:
        description: Path of docker build context
        type: string
        default: "."
    steps:
    - run:
        name: Setup environment variables
        command: |
          echo "export TAG=`date +%Y%m%d`" >> $BASH_ENV
          echo "DOCKER_REPO=<< parameters.registry >>/${DOCKER_ORG:-<< parameters.organization >>}" >> $BASH_ENV
          echo "DOCKER_IMAGE=<< parameters.image_name >>" >> $BASH_ENV
    - when:
        condition: <<parameters.dockerfile_path>>
        steps:
        - run: docker build -t $DOCKER_REPO/$DOCKER_IMAGE:$TAG -f << parameters.dockerfile_path >> << parameters.context_path >>
    - unless:
        condition: <<parameters.dockerfile_path>>
        steps:
        - run: docker build -t $DOCKER_REPO/$DOCKER_IMAGE:$TAG << parameters.context_path >>
    - run:
        name: Push images to registry
        command: |
          docker images
          echo -n $<< parameters.password >> | docker login -u $<< parameters.login >> --password-stdin << parameters.registry >>
          docker push $DOCKER_REPO/$DOCKER_IMAGE:$TAG
jobs:
  build_and_test:
    executor: golang
    steps:
    - checkout
    - run:
        command: make all
        environment:
          # By default Go uses GOMAXPROCS but a Circle CI executor has many
          # cores (> 30) while the CPU and RAM resources are throttled. If we
          # don't limit this to the number of allocated cores, the job is
          # likely to get OOMed and killed.
          GOOPTS: "-p 2"
  publish:
    docker:
      - image: circleci/buildpack-deps:18.04
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.06.0-ce
    - publish_image:
        image_name: prombench
        dockerfile_path: "prombench/cmd/prombench/Dockerfile"
    - publish_image:
        image_name: funcbench
        dockerfile_path: "funcbench/Dockerfile"
    - publish_image:
        image_name: amgithubnotifier
        dockerfile_path: "tools/amGithubNotifier/Dockerfile"
    - publish_image:
        image_name: comment-monitor
        dockerfile_path: "tools/commentMonitor/Dockerfile"
    - publish_image:
        image_name: fake-webserver
        dockerfile_path: "tools/fake-webserver/Dockerfile"
    - publish_image:
        image_name: scaler
        dockerfile_path: "tools/scaler/Dockerfile"
    - publish_image:
        image_name: load-generator
        dockerfile_path: "tools/load-generator/Dockerfile"
workflows:
  version: 2
  prombench:
    jobs:
    - build_and_test:
        filters:
          branches:
            only: /.*/
    - publish:
        requires:
          - build_and_test
        context: org-context
        filters:
          branches:
            only:
              - master
